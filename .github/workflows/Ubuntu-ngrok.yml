name: Ubuntu (ngrok SSH tunnel)

on:
  workflow_dispatch:

jobs:
  instance:
    runs-on: ubuntu-latest

    steps:
    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y jq unzip curl

    - name: Install latest ngrok v3
      run: |
        curl -L https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz -o ngrok.tgz
        tar -xvzf ngrok.tgz
        sudo mv -f ngrok /usr/local/bin/ngrok
        chmod +x /usr/local/bin/ngrok
        ngrok version

    - name: Start ngrok TCP tunnel
      env:
        NGROK_TOKEN: ${{ secrets.NGROK_TOKEN }}
      run: |
        nohup ngrok tcp --authtoken=$NGROK_TOKEN --region=eu 22 > ngrok.log 2>&1 &
        sleep 5
        
    - name: Send full ngrok tunnel JSON to Telegram
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      run: |
        # Get full tunnel JSON pretty-printed and escaped for JSON string
        TUNNEL_JSON=$(curl --silent http://127.0.0.1:4040/api/tunnels | jq '.' | jq -R -s '.')
    
        # Build JSON payload with tunnel JSON as text (markdown escapes all special chars)
        JSON_PAYLOAD=$( jq -n \
          --arg chat_id "$TELEGRAM_CHAT_ID" \
          --arg text "$TUNNEL_JSON" \
          '{chat_id: $chat_id, text: $text, parse_mode: "MarkdownV2"}' )
    
        curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
          -H "Content-Type: application/json" \
          -d "$JSON_PAYLOAD"

    - name: Keep ngrok running forever (tail logs)
      run: tail -f ngrok.log
